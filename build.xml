<?xml version = "1.0"?>
<project name="Calculator" default="coverageReport" basedir=".">
    <property name="project.name" value="Calculator"/>
    <property name="main.name" value="CalculatorApplication"/>
    <property name="package.name" value="com.tw.calculator"/>
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />
    <property name="test.dir" value="test" />
    <property name="out.dir" value="out" />
    <property name="classes.dir" value="${out.dir}/classes" />
    <property name="instrumentedclasses.dir" value="${out.dir}/instrumentedclasses" />
    <property name="testclasses.dir" value="${out.dir}/testclasses" />
    <property name="reports.dir" value="${out.dir}/reports" />
    <property name="junit.reports.dir" value="${reports.dir}/junit" />
    <property name="cobertura.reports.dir" value="${reports.dir}/cobertura" />
    <property name="cobertura.datafile" value="${out.dir}/cobertura.ser" />

    <path id="class.path">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="src.compile.classpath" description="classpath for compiling sources">

    </path>

    <path id="test.compile.classpath" description="classpath for compiling test-sources">
        <pathelement location="${classes.dir}" />
        <pathelement location="${lib.dir}/junit-4.12.jar" />
        <pathelement location="${lib.dir}/hamcrest-core-1.3.jar" />
        <pathelement location="${lib.dir}/mockito-all-1.9.5.jar" />
        <pathelement location="${lib.dir}/system-rules-1.12.0.jar" />
    </path>

    <path id="test.runtime.classpath" description="classpath for running junit-tests">
        <pathelement location="${testclasses.dir}" />
        <pathelement location="${instrumentedclasses.dir}" />
        <pathelement location="${classes.dir}" />
        <pathelement location="${lib.dir}/junit-4.11.jar" />
        <pathelement location="${lib.dir}/hamcrest-core-1.3.jar" />
        <pathelement location="${lib.dir}/mockito-all-1.9.5.jar" />
        <pathelement location="${lib.dir}/system-rules-1.12.0.jar" />
    </path>

    <path id="cobertura.classpath" description="classpath for instrumenting classes">
        <fileset dir="${lib.dir}">
            <include name="cobertura-dependencies/*.jar" />
            <include name="cobertura-*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <target name="clean" description="deleting the output-directory">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${out.dir}" />
        </delete>
    </target>

    <target name="prepare" description="creating the needed directories within target-directory" depends="clean">
        <mkdir dir="${out.dir}" />
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${instrumentedclasses.dir}" />
        <mkdir dir="${testclasses.dir}" />
        <mkdir dir="${reports.dir}" />
        <mkdir dir="${junit.reports.dir}" />
        <mkdir dir="${cobertura.reports.dir}" />
    </target>

    <target name="build" depends="prepare">
        <javac destdir="${classes.dir}" debug="true" source="1.7" fork="true" includeAntRuntime="false" classpathref="src.compile.classpath">
            <src path="${src.dir}"/>
        </javac>
    </target>

    <target name="instrumentClasses" depends="build">
        <cobertura-instrument todir="${instrumentedclasses.dir}" datafile="${cobertura.datafile}" classpathref="cobertura.classpath">
            <fileset dir="${classes.dir}">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="compileTests" depends="instrumentClasses">
        <javac destdir="${testclasses.dir}" debug="true" source="1.7" fork="true" includeAntRuntime="false" classpathref="test.compile.classpath">
            <src path="${test.dir}"/>
        </javac>
    </target>

    <target name="runSpec" depends="compileTests">
        <junit fork="yes" showoutput="true" printsummary="true" haltonfailure="true">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.datafile}" />
            <classpath refid="cobertura.classpath" />

            <formatter type="xml" />
            <classpath refid="test.runtime.classpath" />
            <batchtest fork="yes" todir="${junit.reports.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/*Test*.java"/>
                </fileset>
                <formatter type="plain" usefile="false"/>
            </batchtest>
        </junit>
    </target>

    <target name="coverageReport" depends="runSpec">
        <cobertura-report format="html" destdir="${cobertura.reports.dir}" classpathref="cobertura.classpath">
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </cobertura-report>
    </target>

    <target name="build-jar" depends="build">
        <jar destfile="lib/${project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${package.name}.${main.name}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="build-jar">
        <java fork="true" failonerror="yes" classname="${package.name}.${main.name}">
            <classpath>
                <path location="lib/${project.name}.jar"/>
            </classpath>
        </java>
    </target>
</project>